version: '3.4'

x-default-deploy:
  &default-deploy
  restart_policy:
    condition: on-failure
    max_attempts: 3
x-default-logging:
  &default-logging
  driver: json-file
  options:
    max-size: 1m
    max-file: 1
  # TODO: Add gliderlabs/logspout as a global service in a separate stack so we can pipe logs to an external service (eg: papertrail)

services:
  mobile-frontend:
    deploy: *default-deploy
    logging: *default-logging
  transparency-frontend:
    deploy: *default-deploy
    logging: *default-logging
  transparency-backend:
    deploy: *default-deploy
    logging: *default-logging
  dispatcher:
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddycert:/root/.caddy/acme
    environment:
      DOMAIN: $DOMAIN
      EMAIL: $RECOVERY_EMAIL
    deploy: *default-deploy
    logging: *default-logging
  consent-management-backend:
    environment:
      AUTH_CLIENT_SECRET: special-platform-secret
      AUTH_LOGIN_ENDPOINT: https://$DOMAIN/auth/realms/special/protocol/openid-connect/auth
      AUTH_USERINFO_ENDPOINT: https://$DOMAIN/auth/realms/special/protocol/openid-connect/userinfo
      AUTH_TOKEN_ENDPOINT: https://$DOMAIN/auth/realms/special/protocol/openid-connect/token
      SERVER_AUTH_CALLBACK_ENDPOINT: https://$DOMAIN/callback
    deploy: *default-deploy
    logging: *default-logging
  policy-admin-frontend:
    deploy: *default-deploy
    logging: *default-logging
  compliance-checker:
    deploy: *default-deploy
    logging: *default-logging
  rethinkdb:
    deploy:
      placement:
        constraints:
          - node.labels.type == rethinkdb
      restart_policy:
        condition: on-failure
        max_attempts: 3
    logging: *default-logging
  log-generator:
    environment:
      KEYCLOAK_ENDPOINT: https://$DOMAIN/auth
      KEYCLOAK_CLIENT_SECRET: $KEYCLOAK_CLIENT_SECRET
      KEYCLOAK_PASSWORD: $KEYCLOAK_GENERATOR_PASSWORD
    logging: *default-logging
    deploy:
      restart_policy:
        condition: any
  zookeeper:
    logging: *default-logging
    deploy:
      placement:
        constraints:
          - node.labels.type == kafka
      restart_policy:
        condition: on-failure
        max_attempts: 3
  kafka:
    environment:
      KAFKA_BROKER_ID: 0
    logging: *default-logging
    deploy:
      placement:
        constraints:
          - node.labels.type == kafka
      restart_policy:
        condition: on-failure
        max_attempts: 3
  keycloak:
    logging: *default-logging
    deploy: *default-deploy
    environment:
      KEYCLOAK_PASSWORD: $KEYCLOAK_PASSWORD
      DB_PASSWORD: $KEYCLOAK_PASSWORD
  postgres:
    logging: *default-logging
    environment:
      POSTGRES_PASSWORD: $KEYCLOAK_PASSWORD
    deploy:
      placement:
        constraints:
          - node.labels.type == database
      restart_policy:
        condition: on-failure
        max_attempts: 3
  keycloak-init:
    logging: *default-logging
    environment:
      KEYCLOAK_CLIENT_SECRET: $KEYCLOAK_CLIENT_SECRET
      KEYCLOAK_PASSWORD: $KEYCLOAK_PASSWORD
      KEYCLOAK_GENERATOR_PASSWORD: $KEYCLOAK_GENERATOR_PASSWORD
    deploy:
      restart_policy:
        condition: none

volumes:
  caddycert:
