image: docker:git
services:
  - docker:dind

stages:
  - build
  - publish

variables:
  REGISTRY_ENDPOINT: registry-special.tenforce.com
  REGISTRY_IMAGE: registry-special.tenforce.com/special/keycloak-init
  DOCKER_HOST: "tcp://docker:2375"

before_script:
  - docker login -u ${REGISTRY_USERNAME} -p ${REGISTRY_PASSWORD} ${REGISTRY_ENDPOINT}

validate:
  stage: build
  image:
    name: docker/compose:1.22.0
    entrypoint: [""]
  script:
    # Validate regular local deploy
    - DOMAIN=localhost docker-compose config
    # Validate local deploy with remote identity provider
    - DOMAIN=localhost docker-compose -f docker-compose.yml -f docker-compose.override.yml -f docker-compose.id-provider.yml config
    # Validate swarm deploy
    - DOMAIN=test.example.com KEYCLOAK_PASSWORD=test RECOVERY_EMAIL=test@example.com docker-compose -f docker-compose.yml -f docker-compose.production.yml config

build:
  stage: build
  script:
    - tag=$([ "${CI_COMMIT_REF_NAME}" = "master" ] && echo "latest" || echo "${CI_COMMIT_REF_NAME}")
    - docker build -t ${REGISTRY_IMAGE}:${tag} keycloak-init/
    - docker push ${REGISTRY_IMAGE}:${tag}

publish-github:
  stage: publish
  variables:
    GIT_STRATEGY: clone
  script:
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | ssh-add /dev/stdin
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git push ${GITHUB_REMOTE} master
  only:
    - master
# Two seperate jobs so both remotes can be offline / fail without impacting the other sync job
publish-vienna:
  stage: publish
  variables:
    GIT_STRATEGY: clone
  script:
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | ssh-add /dev/stdin
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git push ${VIENNA_REMOTE} master
  only:
    - master
