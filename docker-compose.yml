version: '3.4'
services:
  mobile-frontend:
    image: registry-special.tenforce.com/special/mobile-frontend:latest

  transparency-frontend:
    image: registry-special.tenforce.com/special/overview-ui:disabled-location

  transparency-backend:
    image: registry-special.tenforce.com/special/kafka-sse-proxy:latest
    environment:
      BROKERS: kafka:9092
      TOPIC: checked-application-logs

  dispatcher:
    image: registry-special.tenforce.com/special/dispatcher:mobile-frontend
    ports:
      - "80:80"
    environment:
      DOMAIN: 'localhost:80'
      EMAIL: 'off'
      POLICY_CRUD_UI: http://data-controller-policy-management-frontend
      CONSENT_UI: http://consent-management-frontend
      TRANSPARENCY_UI: http://transparency-frontend
      TRANSPARENCY_BACKEND: http://transparency-backend
      CONSENT_MANAGEMENT_BACKEND: http://consent-management-backend
      KEYCLOAK: http://keycloak:8080
      MOBILE_FRONTEND: http://mobile-frontend

  # TODO: Add configuration
  consent-management-frontend:
    image: registry-special.tenforce.com/special/consent-management-frontend:latest

  consent-management-backend:
    image: registry-special.tenforce.com/special/consent-management-backend:flush-messages-test
    environment:
      SERVER_HOST: consent-management-backend # Please don't do this, just bind to 0.0.0.0 in the container
      SERVER_PORT: 80
      RETHINKDB_HOST: rethinkdb
      RETHINKDB_PORT: 28015
      KAFKA_BROKER_LIST: kafka:9092
      KAFKA_TIMEOUT: 60000
      CHANGE_LOGS_TOPIC: policies-audit
      FULL_POLICIES_TOPIC: full-policies
      AUTH_LOGIN_URL: https://demonstrator-special.tenforce.com/auth/realms/master/protocol/openid-connect/auth
      AUTH_CLIENT_ID: special-platform
      AUTH_CLIENT_SECRET: a0a8587f-4e33-466b-bf98-1c489b413b97
      AUTH_USERINFO_ENDPOINT: https://demonstrator-special.tenforce.com/auth/realms/master/protocol/openid-connect/userinfo
      AUTH_TOKEN_ENDPOINT: https://demonstrator-special.tenforce.com/auth/realms/master/protocol/openid-connect/token

  # TODO: Add configuration
  data-controller-policy-management-frontend:
    image: registry-special.tenforce.com/special/data-controller-policy-management-frontend:latest

  compliance-checker:
    image: registry-special.tenforce.com/special/compliance-checker:latest
    environment:
      KAFKA_URL_LIST: "kafka:9092"
      KAFKA_CLIENT_ID: 1
      KAFKA_TOPIC_POLICY: "full-policies"
      KAFKA_TOPIC_ACCESS: "application-logs"
      KAFKA_TOPIC_CONSENT: "checked-application-logs"

  rethinkdb:
    image: rethinkdb:2.3
    volumes:
      - rethinkdb:/data

  demo-log-generator:
    image: registry-special.tenforce.com/special/demo-log-generator:latest
    environment:
      PRODUCER_SPEED: 1750
      KAFKA_URL_LIST: kafka:9092
      KAFKA_CLIENT_ID: 1001
      KAFKA_TOPIC_POLICY: full-policies
      KAFKA_TOPIC_ACCESS: application-logs
      KAFKA_TOPIC_CONSENT: checked-application-logs

  # Kafka setup (should maybe go in external deployment)
  zookeeper:
    image: flowofcontrol/docker-zookeeper

  # Networking setup is not perfect yet and will most likely change slightly once
  # I get around to testing it with multiple nodes on swarm. For local dev the current setup works fine
  # TODO: save data in a volume (or mount from host)
  kafka:
    image: wurstmeister/kafka
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    depends_on:
      - zookeeper
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: application-logs:1:1,full-policies:1:1:compact,policies-audit:1:1,checked-application-logs:1:1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafkalogs:/kafka

  # Keycloak (authentication) setup (should maybe go into an external deployment)
  # TODO: move secrets into docker secrets
  keycloak:
    image: jboss/keycloak:latest
    environment:
      KEYCLOAK_USER: keycloak
      KEYCLOAK_PASSWORD: keycloak
      DB_VENDOR: POSTGRES
      DB_PASSWORD: keycloak
      PROXY_ADDRESS_FORWARDING: 'true'
  postgres:
    image: postgres:9-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloakdb:/var/lib/postgresql/data
# keycloak-init:
#   image: specialregistry.wdullaer.com/special/keycloak-init:latest

volumes:
  keycloakdb:
    driver: local
  rethinkdb:
    driver: local
  kafkalogs:
    driver: local
